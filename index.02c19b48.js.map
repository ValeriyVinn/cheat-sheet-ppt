{"mappings":"AAAA,MAAMA,EAAMC,SAASC,uBAAuB,aAC5C,IAAIC,EAEJ,IAAKA,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC1BH,EAAIG,GAAGE,iBAAiB,SAAS,WAC/BC,KAAKC,UAAUC,OAAO,UACtB,MAAMC,EAAQH,KAAKI,mBACfD,EAAME,MAAMC,UACdH,EAAME,MAAMC,UAAY,KAExBH,EAAME,MAAMC,UAAYH,EAAMI,aAAe,I,IAenDC,OAAOC,QAAU,SAASC,GACxB,IAAKA,EAAMC,OAAOC,QAAQ,YAAa,CACrC,IACIC,EADAC,EAAYnB,SAASC,uBAAuB,oBAEhD,IAAKiB,EAAI,EAAGA,EAAIC,EAAUhB,OAAQe,IAAK,CACrC,IAAIE,EAAeD,EAAUD,GACzBE,EAAad,UAAUe,SAAS,SAClCD,EAAad,UAAUgB,OAAO,O,IAUtC,IAAIC,EAAkB,KACpB,IAAIC,EAAiBxB,SAASyB,eAAe,YAEzCC,GADgB1B,SAASyB,eAAe,kBAClCzB,SAAS2B,gBAAgBC,WAE/BC,EACF7B,SAAS2B,gBAAgBf,aACzBZ,SAAS2B,gBAAgBG,aAEvBC,EAAcC,KAAKC,MAAa,IAAPP,EAAcG,GAGzCL,EAAed,MAAMwB,QADnBR,EAAM,IACuB,OAEA,OAEjCF,EAAepB,iBAAiB,SAAS,KACvCJ,SAAS2B,gBAAgBC,UAAY,CAAC,IAGxCJ,EAAed,MAAMyB,WAAa,iCAAiCJ,iBAA2BA,KAAe,EAG/GlB,OAAOuB,SAAWb,EAClBV,OAAOwB,OAASd,EAuChB,MAwBMe,EAAO,CACXC,aAAcvC,SAASwC,cAAc,8BACrCC,cAAezC,SAASwC,cAAc,+BACtCE,SAAU1C,SAASwC,cAAc,iBAYnC,SAASG,IACP9B,OAAO+B,oBAAoB,UAAWC,GACtC7C,SAAS8C,KAAKxC,UAAUgB,OAAO,a,CAUjC,SAASuB,EAAc9B,GAEA,WACJA,EAAMgC,MAGrBJ,G,CA3BJL,EAAKC,aAAanC,iBAAiB,SAInC,WACES,OAAOT,iBAAiB,UAAWyC,GACnC7C,SAAS8C,KAAKxC,UAAU0C,IAAI,a,IAL9BV,EAAKG,cAAcrC,iBAAiB,QAASuC,GAC7CL,EAAKI,SAAStC,iBAAiB,SAY/B,SAAyBW,GACnBA,EAAMkC,gBAAkBlC,EAAMC,QAEhC2B,G","sources":["src/script.js"],"sourcesContent":["const acc = document.getElementsByClassName(\"accordion\");\nlet i;\n\nfor (i = 0; i < acc.length; i++) {\n  acc[i].addEventListener(\"click\", function () {\n    this.classList.toggle(\"active\");\n    const panel = this.nextElementSibling;\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = panel.scrollHeight + \"px\";\n    }\n  });\n}\n\n// ============= Click Dropdown Button on Markup =================\n\n\n/* When the user clicks on the button,\ntoggle between hiding and showing the dropdown content */\nfunction myFunction() {\n  document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n}\n\n// Close the dropdown menu if the user clicks outside of it\nwindow.onclick = function(event) {\n  if (!event.target.matches('.dropbtn')) {\n    var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n    var i;\n    for (i = 0; i < dropdowns.length; i++) {\n      var openDropdown = dropdowns[i];\n      if (openDropdown.classList.contains('show')) {\n        openDropdown.classList.remove('show');\n      }\n    }\n  }\n} \n\n\n\n// ============= Scroll btn =================\n\nlet calcScrollValue = () => {\n  let scrollProgress = document.getElementById(\"progress\");\n  let progressValue = document.getElementById(\"progress-value\");\n  let pos = document.documentElement.scrollTop;\n  // console.log(pos)\n  let calcHeight =\n    document.documentElement.scrollHeight -\n    document.documentElement.clientHeight;\n  // console.log(calcHeight)\n  let scrollValue = Math.round((pos * 100) / calcHeight);\n  // console.log(scrollValue)\n  if (pos > 100) {\n    scrollProgress.style.display = \"grid\";\n  } else {\n    scrollProgress.style.display = \"none\";\n  }\n  scrollProgress.addEventListener(\"click\", () => {\n    document.documentElement.scrollTop = 0;\n  });\n\n  scrollProgress.style.background = `conic-gradient(cornflowerblue ${scrollValue}%, aliceblue ${scrollValue}%)`;\n};\n\nwindow.onscroll = calcScrollValue;\nwindow.onload = calcScrollValue;\n\n// ============= Scroll btn =================\n\n// !-------------  Working zone ------------------\n\nfunction mergePairsOfElements(array) {\n  for (let index = 0; index < array.length; index += 1) {\n    const arrayOutput = [];\n    if (index % 2 === 0) {\n      arrayOutput.push(String(array[index]) + String(array[index + 1]));\n    }\n    return arrayOutput;\n  }\n}\n\n// console.log(mergePairsOfElements([1, 2, 3, 4, 5, 6]));\n\nfunction printElementsInReverseOrder(array) {\n  const reverseArray = array.reverse();\n\n  for (const number of reverseArray) {\n    console.log(number);\n  }\n}\n\n// printElementsInReverseOrder([1, 2, 3, 4, 5, 6])\n\nfunction firstEvenFromEnd(number) {\n  const reverseNumber = String(number).split(\"\").reverse();\n\n  for (const number of reverseNumber) {\n    if (Number(number) % 2 === 0) {\n      return number;\n    }\n  }\n}\n\n\nconst separateTripletsWithSpacesFromEnd = function(string) {\n  let result = '';\n\n  for (let index = string.length; index > 0; index -= 3) {\n    result = ' ' + string.slice(Math.max(0, index - 3), index) + result;\n  }\n\n  result = result.trim();\n\n  return result;\n};\n\n// console.log(separateTripletsWithSpacesFromEnd('12345366'));\n\n\n\n/*\n * 1. Открыть и закрыть по кнопке\n * 2. Закрыть по клику в бекдроп: onBackDropClick\n * 3. Закрыть по ESC: onEscapeKeypress\n *\n * В CSS есть класс show-modal, который необходимо добавить на body при открытии модалки\n */\n\nconst refs = {\n  openModalBtn: document.querySelector('[data-action=\"open-modal\"]'),\n  closeModalBtn: document.querySelector('[data-action=\"close-modal\"]'),\n  backdrop: document.querySelector(\".js-backdrop\"),\n};\n\nrefs.openModalBtn.addEventListener(\"click\", onOpenModal);\nrefs.closeModalBtn.addEventListener(\"click\", onCloseModal);\nrefs.backdrop.addEventListener(\"click\", onBackdropClick);\n\nfunction onOpenModal() {\n  window.addEventListener(\"keydown\", onEscKeyPress);\n  document.body.classList.add(\"show-modal\");\n}\n\nfunction onCloseModal() {\n  window.removeEventListener(\"keydown\", onEscKeyPress);\n  document.body.classList.remove(\"show-modal\");\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    // console.log('Кликнули именно в бекдроп!!!!');\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  // console.log(event.code)\n  const ESC_KEY_CODE = \"Escape\";\n  const isEscKey = event.code === ESC_KEY_CODE;\n\n  if (isEscKey) {\n    onCloseModal();\n  }\n}\n\n\n"],"names":["$b63be9b0371e788c$var$acc","document","getElementsByClassName","$b63be9b0371e788c$var$i","length","addEventListener","this","classList","toggle","panel","nextElementSibling","style","maxHeight","scrollHeight","window","onclick","event","target","matches","i1","dropdowns","openDropdown","contains","remove","$b63be9b0371e788c$var$calcScrollValue","scrollProgress","getElementById","pos","documentElement","scrollTop","calcHeight","clientHeight","scrollValue","Math","round","display","background","onscroll","onload","$b63be9b0371e788c$var$refs","openModalBtn","querySelector","closeModalBtn","backdrop","$b63be9b0371e788c$var$onCloseModal","removeEventListener","$b63be9b0371e788c$var$onEscKeyPress","body","code","add","currentTarget"],"version":3,"file":"index.02c19b48.js.map"}